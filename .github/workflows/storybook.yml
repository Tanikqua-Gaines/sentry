name: storybook
on: pull_request

jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        # Checkout codebase
        - uses: actions/checkout@v2

        # See https://github.com/actions/cache/blob/master/examples.md#node---yarn for example
        - name: Get yarn cache directory path
          id: yarn-cache-dir-path
          run: echo "::set-output name=dir::$(yarn cache dir)"

        # Use nvmrc so we don't have yet another place node version is defined
        - name: Get node version from .nvmrc
          id: nvmrc
          run: echo "::set-output name=version::$(cat .nvmrc)"

        # yarn cache
        - uses: actions/cache@v1
          id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
          with:
            path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
              ${{ runner.os }}-yarn-

        # Setup node
        - uses: actions/setup-node@v1
          with:
            node-version: ${{ steps.nvmrc.outputs.version }}

        - name: Install dependencies
          run: yarn install --frozen-lockfile

        - name: Build storybook
          env:
            STORYBOOK_BUILD: 1
          run: |
            yarn storybook-build

        # Setup gcloud CLI
        - name: Setup gcloud CLI
          uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
          with:
            version: '275.0.0'
            service_account_email: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_EMAIL }}
            service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS}}

        - name: Setup bucket
          id: bucket
          run: |
            echo "::set-output name=branch-name::$(echo ${GITHUB_REF#refs/heads/})"
            echo "::set-output name=branch-slug::$(echo ${GITHUB_REF#refs/heads/} | tr '[:upper:]./' '[:lower:]--' | tr -cd '[:alnum:]-_')"

        - name: Deploy to gcloud
          env:
            STORYBOOK_BRANCH: ${{ steps.bucket.outputs.branch-name }}
            STORYBOOK_BRANCH_SLUG: ${{ steps.bucket.outputs.branch-slug }}
          run: |
            .travis/deploy-storybook.sh
